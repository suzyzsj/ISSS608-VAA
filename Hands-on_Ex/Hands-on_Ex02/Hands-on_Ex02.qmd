---
title: "Hands-on Exercise 2：Beyond ggplot2 Fundamentals"
author: "Zhang Shujie (Suzy)"
execute: 
  eval: true
  echo: true
  freeze: true
  warning: false
editor: visual
---

# Getting Started

## Installing and loading the required libraries

```{r}
pacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes,tidyverse)
```

## Importing data

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

## Overview of the data

```{r}
summary(exam_data)
```

## Plotting Practice

## 1: Beyond ggplot2 Annotation: ggrepel

A comparison between annotations using geom_label(), geom_text() and package ggrepel.

::: panel-tabset
### Without

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              linewidth=0.5) +  
  geom_label(aes(label = ID), 
             hjust = .5, 
             vjust = -.5) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

### With ggrepel

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              linewidth=0.5) +  
  geom_label_repel(aes(label = ID), 
             hjust = .5, 
             vjust = -.5) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```
:::

## 2: Beyond ggplot2 Themes

### 2.1: Working with ggtheme package

ggplot2 comes with eight built-in themes, they are: theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void().

::: panel-tabset
### Without

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_gray() +
  ggtitle("Distribution of Maths scores") 
```

### With ggtheme

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
ggtitle("Distribution of Maths scores") +
theme_economist()
```
:::

### 2.2: Working with hrbthems package

hrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.

::: panel-tabset
### Without hrbthems plot

```{r}
#| echo: false
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum()
```

### Code

```{r}
#| eval: false
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum()
```
:::

-   axis_title_size argument is used to increase the font size of the axis title to 18.

-   base_size argument is used to increase the default axis label to 15.

-   grid argument is used to remove the x-axis grid lines.

::: panel-tabset
### With hrbthems plot

```{r}
#| echo: false
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum(axis_title_size = 18,
              base_size = 15,
              grid = "Y")
```

### Code

```{r}
#| eval: false
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum(axis_title_size = 18,
              base_size = 15,
              grid = "Y")
```
:::

## 3: Beyond Single Graph

::: panel-tabset
### p1 plot

```{r}
#| echo: false
p1 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of Maths scores")
p1
```

### p1 code

```{r}
#| eval: false
p1 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of Maths scores")
```
:::

::: panel-tabset
### p2 plot

```{r}
#| echo: false
p2 <- ggplot(data=exam_data, 
             aes(x = ENGLISH)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of English scores")

p2
```

### p2 code

```{r}
#| eval: false
p2 <- ggplot(data=exam_data, 
             aes(x = ENGLISH)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of English scores")
```
:::

::: panel-tabset
### p3 plot

```{r}
#| echo: false
p3 <- ggplot(data=exam_data, 
             aes(x= MATHS, 
                 y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
p3
```

### p3 code

```{r}
#| eval: false
p3 <- ggplot(data=exam_data, 
             aes(x= MATHS, 
                 y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```
:::

### 2.1: Creating Composite Graphics: pathwork methods

**Patchwork package：**

-   Two-Column Layout using the Plus Sign +.

-   Parenthesis () to create a subplot group.

-   Two-Row Layout using the Division Sign /

### 2.2: Combining two ggplot2 graphs

::: panel-tabset
### The plot

```{r}
#| echo: false
p1 + p2
```

### The code

```{r}
#| eval: false
p1 + p2
```
:::

### 2.3: Combining three ggplot2 graphs

-   “\|” operator to stack two ggplot2 graphs,
-   “/” operator to place the plots beside each other,
-   “()” operator the define the sequence of the plotting.

::: panel-tabset
### The plot

```{r}
#| echo: false
(p1 / p2) | p3
```

### The code

```{r}
#| eval: false
(p1 / p2) | p3
```
:::

### 2.4: Creating a composite figure with tag

patchwork also provides auto-tagging capabilities.

::: panel-tabset
### The plot

```{r}
#| echo: false
((p1 / p2) | p3) + 
  plot_annotation(tag_levels = 'I')
```

### The code

```{r}
#| eval: false
((p1 / p2) | p3) + 
  plot_annotation(tag_levels = 'I')
```
:::

### 2.5: Creating figure with insert

inset_element()

::: panel-tabset
### The plot

```{r}
#| echo: false
p3 + inset_element(p2, 
                   left = 0.02, 
                   bottom = 0.7, 
                   right = 0.5, 
                   top = 1)
```

### The code

```{r}
#| eval: false
p3 + inset_element(p2, 
                   left = 0.02, 
                   bottom = 0.7, 
                   right = 0.5, 
                   top = 1)
```
:::

### 2.6: Creating a composite figure by using patchwork and ggtheme

Figure below is created by combining patchwork and theme_economist() of ggthemes package.

::: panel-tabset
### The plot

```{r}
#| echo: false
patchwork <- (p1 / p2) | p3
patchwork & theme_economist()
```

### The code

```{r}
#| eval: false
patchwork <- (p1 / p2) | p3
patchwork & theme_economist()
```
:::
