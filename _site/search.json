[
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In-class Exercise 1:Now You See It!",
    "section": "",
    "text": "In this hands-on exercise,two R packages will be used.They are:\n\ntidyverse\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse,haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "title": "In-class Exercise 1:Now You See It!",
    "section": "",
    "text": "In this hands-on exercise,two R packages will be used.They are:\n\ntidyverse\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse,haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#importing-pisa-data",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#importing-pisa-data",
    "title": "In-class Exercise 1:Now You See It!",
    "section": "Importing PISA data",
    "text": "Importing PISA data\nThe code chunk below uses ‘read_sas()’ of haven to import PISA data into R environment.\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "While Singapore has made strides in reducing disparities in family wealth, its education policy is committed to ensuring high-quality education in every school. However, the general public still perceives persistent educational inequalities, especially between elite and ordinary community schools, as well as among students from different socioeconomic backgrounds and immigrant families. We will delve deeply into the state of education in Singapore, based on the data provided by the 2022 Programme for International Student Assessment (PISA)."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-and-launching-r-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#install-and-launching-r-packages",
    "title": "Take-home Exercise 1",
    "section": "3.1 Install and launching R packages",
    "text": "3.1 Install and launching R packages\nWe use the pacman::p_load() function to load the required R packages into our working environment. The loaded packages are:\n\ntidyverse: A collection of packages for data manipulation and visualization, including ggplot2, dplyr, tidyr, etc.\nggplot2: For creating complex charts and visualizations.\ndplyr: For data manipulation and cleaning.\nreadr: For reading CSV files.\nggpubr: Provides easy-to-use functions for creating publication-quality charts.\nscales: For beautifying charts, like adjusting axes.\nlubridate: For handling date data, if your data includes time information.\nforcats: For handling categorical variables, which could be useful for dealing with variables like gender and school IDs.\ngridExtra or cowplot: For arranging multiple plots on a single page.\ncorrplot: For visualizing correlations between variables.\nHmisc: Contains many functions useful for data analysis, such as descriptive statistics.\nkableExtra:using for creating and beautifying tables. With the kableExtra package, you can easily add titles, footnotes, change table styles, merge cells, and more.\n\n\npacman::p_load(tidyverse, ggplot2, dplyr, readr, ggpubr,\nscales,forcats, gridExtra, corrplot, Hmisc, lubridate,knitr, kableExtra,patchwork)\n\n\n\n\n\nNotes\n\n\nThe R package intsvy allows R users to analyse PISA data among other international large-scale assessments. The use of PISA data via R requires data preparation, and intsvy offers a data transfer function to import data available in other formats directly into R. Intsvy also provides a merge function to merge the student, school, parent, teacher and cognitive databases.\nBut here we only consider the situation in Singapore and don’t need a comparison between countries, so we don’t use this package.\nPlease refer to the details for more information.Instructions"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#dataset-organization",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#dataset-organization",
    "title": "Take-home Exercise 1",
    "section": "3.2 Dataset Organization",
    "text": "3.2 Dataset Organization\nRead ’stu_qqq_SG’file.\n\nstu_qqq_SG &lt;- read_rds(\"/Users/zhangshujie/Desktop/SMU/Term 2/Visual/suzyzsj/ISSS608-VAA/In-class_Ex/In-class_Ex01/data/stu_qqq_SG.rds\")\n\n\n3.2.1 Research Variable Selection\nExtracting valuable variables from the original dataset because we are investigating the distribution of academic performance among Singaporean students in mathematics, reading, and science, as well as the relationship between these performances and students’ schools, gender, and socio-economic status.\nI have extracted the following variables:\n\nCNTSTUID:Intl. Student ID\nCNTSCHID:Intl. School ID\nST004D01T:Student (Standardized) Gender,1 female,2male\nESCS:Index of economic, social and cultural status\nPV1-10MATH:Plausible Value 1-10 in Mathematics\nPV1-10READ:Plausible Value 1-10 in Reading\nPV1-10SCIE:Plausible Value 1-10 in Science\n\nThe previous table information is too cumbersome. I will extract all these variables to create a new table, making it more conducive to subsequent analysis.\n\nstu_qqq_SG_01 &lt;- stu_qqq_SG[, c(\"CNTSTUID\", \"CNTSCHID\", \"ST004D01T\", \"ESCS\",\n                             \"PV1MATH\", \"PV2MATH\", \"PV3MATH\", \"PV4MATH\", \"PV5MATH\", \n                             \"PV6MATH\", \"PV7MATH\", \"PV8MATH\", \"PV9MATH\", \"PV10MATH\", \n                             \"PV1READ\", \"PV2READ\", \"PV3READ\", \"PV4READ\", \"PV5READ\", \n                             \"PV6READ\", \"PV7READ\", \"PV8READ\", \"PV9READ\", \"PV10READ\", \n                             \"PV1SCIE\", \"PV2SCIE\", \"PV3SCIE\", \"PV4SCIE\", \"PV5SCIE\", \n                             \"PV6SCIE\", \"PV7SCIE\", \"PV8SCIE\", \"PV9SCIE\", \"PV10SCIE\")]\n\nwrite_rds(stu_qqq_SG_01,\n          \"data/stu_qqq_SG_01.rds\")\n\n\n\n3.2.2 Data overview\nReviewing the table to obtain an overview and understand the general situation of the data.\n\nstu_qqq_SG_01 &lt;- read_rds(\"data/stu_qqq_SG_01.rds\")\n\n\nFirst 5 RowsDataset StructureData Health\n\n\nDisplaying first 5 rows using head():\n\nhead(stu_qqq_SG_01,5) %&gt;%\n  kbl() %&gt;%\n  kable_material() %&gt;%\n  scroll_box(width = \"400%\", height = \"300px\")\n\n\n\n\n\nCNTSTUID\nCNTSCHID\nST004D01T\nESCS\nPV1MATH\nPV2MATH\nPV3MATH\nPV4MATH\nPV5MATH\nPV6MATH\nPV7MATH\nPV8MATH\nPV9MATH\nPV10MATH\nPV1READ\nPV2READ\nPV3READ\nPV4READ\nPV5READ\nPV6READ\nPV7READ\nPV8READ\nPV9READ\nPV10READ\nPV1SCIE\nPV2SCIE\nPV3SCIE\nPV4SCIE\nPV5SCIE\nPV6SCIE\nPV7SCIE\nPV8SCIE\nPV9SCIE\nPV10SCIE\n\n\n\n\n70200001\n70200052\n1\n0.1836\n639.004\n601.251\n621.480\n631.596\n579.276\n591.791\n600.709\n587.322\n618.131\n581.973\n676.298\n692.247\n690.981\n643.067\n627.908\n684.676\n661.380\n674.070\n666.282\n657.387\n710.634\n618.739\n591.623\n659.770\n635.892\n646.901\n603.569\n621.352\n659.674\n649.719\n\n\n70200002\n70200134\n2\n0.8261\n697.191\n754.277\n671.940\n657.300\n621.126\n655.729\n747.934\n694.365\n742.732\n656.934\n625.585\n686.716\n663.147\n567.435\n614.500\n604.745\n669.375\n623.735\n649.579\n571.261\n670.646\n748.839\n635.443\n639.735\n608.385\n670.662\n734.807\n639.748\n716.768\n655.670\n\n\n70200003\n70200112\n2\n-1.0357\n693.710\n654.450\n696.938\n646.187\n678.119\n644.019\n720.531\n671.425\n694.085\n668.304\n620.116\n559.078\n554.767\n587.026\n591.806\n570.547\n599.078\n545.610\n610.466\n590.758\n666.095\n604.771\n704.217\n687.659\n690.974\n617.175\n692.886\n630.900\n656.620\n649.087\n\n\n70200004\n70200004\n2\n-0.9606\n427.317\n410.376\n423.586\n388.935\n330.962\n379.988\n398.535\n422.127\n375.354\n453.348\n381.495\n400.815\n374.911\n367.484\n336.009\n324.630\n396.242\n374.723\n314.704\n342.956\n340.308\n329.889\n411.353\n327.974\n292.183\n355.423\n400.182\n317.518\n298.893\n362.702\n\n\n70200005\n70200152\n1\n0.0856\n436.462\n453.450\n392.315\n439.986\n443.125\n452.648\n396.970\n459.945\n438.166\n448.084\n448.199\n560.636\n365.478\n469.970\n503.664\n481.215\n436.800\n531.226\n480.997\n478.578\n456.333\n453.400\n498.937\n532.324\n508.231\n504.461\n404.572\n549.457\n411.062\n473.613\n\n\n\n\n\n\n\n\n\nChecking the structure of demo_data using str():\n\nstr(stu_qqq_SG_01)\n\ntibble [6,606 × 34] (S3: tbl_df/tbl/data.frame)\n $ CNTSTUID : num [1:6606] 70200001 70200002 70200003 70200004 70200005 ...\n  ..- attr(*, \"label\")= chr \"Intl. Student ID\"\n $ CNTSCHID : num [1:6606] 70200052 70200134 70200112 70200004 70200152 ...\n  ..- attr(*, \"label\")= chr \"Intl. School ID\"\n $ ST004D01T: num [1:6606] 1 2 2 2 1 1 2 2 1 2 ...\n  ..- attr(*, \"label\")= chr \"Student (Standardized) Gender\"\n $ ESCS     : num [1:6606] 0.1836 0.8261 -1.0357 -0.9606 0.0856 ...\n  ..- attr(*, \"label\")= chr \"Index of economic, social and cultural status\"\n $ PV1MATH  : num [1:6606] 639 697 694 427 436 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 1 in Mathematics\"\n $ PV2MATH  : num [1:6606] 601 754 654 410 453 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 2 in Mathematics\"\n $ PV3MATH  : num [1:6606] 621 672 697 424 392 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 3 in Mathematics\"\n $ PV4MATH  : num [1:6606] 632 657 646 389 440 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 4 in Mathematics\"\n $ PV5MATH  : num [1:6606] 579 621 678 331 443 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 5 in Mathematics\"\n $ PV6MATH  : num [1:6606] 592 656 644 380 453 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 6 in Mathematics\"\n $ PV7MATH  : num [1:6606] 601 748 721 399 397 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 7 in Mathematics\"\n $ PV8MATH  : num [1:6606] 587 694 671 422 460 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 8 in Mathematics\"\n $ PV9MATH  : num [1:6606] 618 743 694 375 438 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 9 in Mathematics\"\n $ PV10MATH : num [1:6606] 582 657 668 453 448 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 10 in Mathematics\"\n $ PV1READ  : num [1:6606] 676 626 620 381 448 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 1 in Reading\"\n $ PV2READ  : num [1:6606] 692 687 559 401 561 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 2 in Reading\"\n $ PV3READ  : num [1:6606] 691 663 555 375 365 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 3 in Reading\"\n $ PV4READ  : num [1:6606] 643 567 587 367 470 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 4 in Reading\"\n $ PV5READ  : num [1:6606] 628 614 592 336 504 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 5 in Reading\"\n $ PV6READ  : num [1:6606] 685 605 571 325 481 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 6 in Reading\"\n $ PV7READ  : num [1:6606] 661 669 599 396 437 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 7 in Reading\"\n $ PV8READ  : num [1:6606] 674 624 546 375 531 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 8 in Reading\"\n $ PV9READ  : num [1:6606] 666 650 610 315 481 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 9 in Reading\"\n $ PV10READ : num [1:6606] 657 571 591 343 479 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 10 in Reading\"\n $ PV1SCIE  : num [1:6606] 711 671 666 340 456 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 1 in Science\"\n $ PV2SCIE  : num [1:6606] 619 749 605 330 453 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 2 in Science\"\n $ PV3SCIE  : num [1:6606] 592 635 704 411 499 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 3 in Science\"\n $ PV4SCIE  : num [1:6606] 660 640 688 328 532 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 4 in Science\"\n $ PV5SCIE  : num [1:6606] 636 608 691 292 508 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 5 in Science\"\n $ PV6SCIE  : num [1:6606] 647 671 617 355 504 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 6 in Science\"\n $ PV7SCIE  : num [1:6606] 604 735 693 400 405 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 7 in Science\"\n $ PV8SCIE  : num [1:6606] 621 640 631 318 549 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 8 in Science\"\n $ PV9SCIE  : num [1:6606] 660 717 657 299 411 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 9 in Science\"\n $ PV10SCIE : num [1:6606] 650 656 649 363 474 ...\n  ..- attr(*, \"label\")= chr \"Plausible Value 10 in Science\"\n\n\n\n\nChecking for duplicates:\n\nstu_qqq_SG_01[duplicated(stu_qqq_SG_01),]\n\n# A tibble: 0 × 34\n# ℹ 34 variables: CNTSTUID &lt;dbl&gt;, CNTSCHID &lt;dbl&gt;, ST004D01T &lt;dbl&gt;, ESCS &lt;dbl&gt;,\n#   PV1MATH &lt;dbl&gt;, PV2MATH &lt;dbl&gt;, PV3MATH &lt;dbl&gt;, PV4MATH &lt;dbl&gt;, PV5MATH &lt;dbl&gt;,\n#   PV6MATH &lt;dbl&gt;, PV7MATH &lt;dbl&gt;, PV8MATH &lt;dbl&gt;, PV9MATH &lt;dbl&gt;, PV10MATH &lt;dbl&gt;,\n#   PV1READ &lt;dbl&gt;, PV2READ &lt;dbl&gt;, PV3READ &lt;dbl&gt;, PV4READ &lt;dbl&gt;, PV5READ &lt;dbl&gt;,\n#   PV6READ &lt;dbl&gt;, PV7READ &lt;dbl&gt;, PV8READ &lt;dbl&gt;, PV9READ &lt;dbl&gt;, PV10READ &lt;dbl&gt;,\n#   PV1SCIE &lt;dbl&gt;, PV2SCIE &lt;dbl&gt;, PV3SCIE &lt;dbl&gt;, PV4SCIE &lt;dbl&gt;, PV5SCIE &lt;dbl&gt;,\n#   PV6SCIE &lt;dbl&gt;, PV7SCIE &lt;dbl&gt;, PV8SCIE &lt;dbl&gt;, PV9SCIE &lt;dbl&gt;, …\n\n\nFrom the output, there are no duplicated rows found in stu_qqq_SG_01.\nChecking for missing values:\n\nsum(is.na(stu_qqq_SG_01))\n\n[1] 47\n\n\nFrom the output, there are 47 missing values across all columns in stu_qqq_SG_01.\n\n\n\nWhere is the missing value ??!!\nWe found 47 missing values in the ESCS column.\n\nThe codeThe result\n\n\n\n# Find the location of each missing value in the data set\nmissing_values_locations &lt;- which(is.na(stu_qqq_SG_01), arr.ind = TRUE)\n\n# Display the specific column name\nmissing_values_df &lt;- data.frame(\n  Row = missing_values_locations[, 1],\n  Column = names(stu_qqq_SG_01)[missing_values_locations[, 2]]\n)\n\n# View the location of the missing value\nprint(missing_values_df)\n\n\n\n\n\n    Row Column\n1    73   ESCS\n2   181   ESCS\n3   242   ESCS\n4   442   ESCS\n5   812   ESCS\n6  1152   ESCS\n7  1340   ESCS\n8  1535   ESCS\n9  1580   ESCS\n10 1647   ESCS\n11 1807   ESCS\n12 1926   ESCS\n13 1994   ESCS\n14 2027   ESCS\n15 2046   ESCS\n16 2254   ESCS\n17 2449   ESCS\n18 2463   ESCS\n19 2504   ESCS\n20 3125   ESCS\n21 3134   ESCS\n22 3163   ESCS\n23 3222   ESCS\n24 3327   ESCS\n25 3672   ESCS\n26 3902   ESCS\n27 3931   ESCS\n28 3950   ESCS\n29 4003   ESCS\n30 4154   ESCS\n31 4191   ESCS\n32 4218   ESCS\n33 4673   ESCS\n34 4708   ESCS\n35 4785   ESCS\n36 4898   ESCS\n37 5122   ESCS\n38 5555   ESCS\n39 5560   ESCS\n40 5659   ESCS\n41 5950   ESCS\n42 5990   ESCS\n43 6081   ESCS\n44 6124   ESCS\n45 6157   ESCS\n46 6196   ESCS\n47 6592   ESCS\n\n\n\n\n\nThe Economic, Social, and Cultural Status Index (ESCS) is a crucial indicator, and removing observations with missing ESCS values directly may result in sample bias. I choose to retain the missing values.\n\n\n3.2.3 Processing PV Values\nDue to the presence of 10 plausible values (PVs) for performance in mathematics, reading, and science, I will take the average PV for each subject to facilitate subsequent EDA visualization.\n\nThe resultThe code\n\n\n\n\n# A tibble: 6 × 8\n  CNTSTUID CNTSCHID ST004D01T    ESCS MeanMATH MeanREAD MeanSCIE MeanOverall\n     &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;\n1 70200001 70200052         1  0.184      605.     667.     640.        637.\n2 70200002 70200134         2  0.826      690.     628.     672.        663.\n3 70200003 70200112         2 -1.04       677.     583.     660.        640.\n4 70200004 70200004         2 -0.961      401.     361.     344.        369.\n5 70200005 70200152         1  0.0856     436.     476.     479.        464.\n6 70200006 70200043         1  0.127      518.     431.     476.        475.\n\n\n\n\n\nstu_qqq_SG_01 &lt;- stu_qqq_SG_01 %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    MeanMATH = mean(c(PV1MATH, PV2MATH, PV3MATH, PV4MATH, PV5MATH, \n                      PV6MATH, PV7MATH, PV8MATH, PV9MATH, PV10MATH), na.rm = TRUE),\n    MeanREAD = mean(c(PV1READ, PV2READ, PV3READ, PV4READ, PV5READ, \n                      PV6READ, PV7READ, PV8READ, PV9READ, PV10READ), na.rm = TRUE),\n    MeanSCIE = mean(c(PV1SCIE, PV2SCIE, PV3SCIE, PV4SCIE, PV5SCIE, \n                      PV6SCIE, PV7SCIE, PV8SCIE, PV9SCIE, PV10SCIE), na.rm = TRUE),\n    MeanOverall=mean(c(PV1MATH, PV2MATH, PV3MATH, PV4MATH, PV5MATH, \n                      PV6MATH, PV7MATH, PV8MATH, PV9MATH, PV10MATH,\n                      PV1READ, PV2READ, PV3READ, PV4READ, PV5READ, \n                      PV6READ, PV7READ, PV8READ, PV9READ, PV10READ,\n                      PV1SCIE, PV2SCIE, PV3SCIE, PV4SCIE, PV5SCIE, \n                      PV6SCIE, PV7SCIE, PV8SCIE, PV9SCIE, PV10SCIE), na.rm = TRUE)\n  ) %&gt;%\nungroup() %&gt;%\nselect(-matches(\"^PV\\\\d+MATH$\"), -matches(\"^PV\\\\d+READ$\"), \n       -matches(\"^PV\\\\d+SCIE$\"), MeanMATH, MeanREAD, MeanSCIE,MeanOverall)\nhead(stu_qqq_SG_01)\n\n\n\n\nI have now extracted the useful parts from the original table, retaining variables such as CNTSTUID, CNTSCHID, ST004D01T, ESCS, MeanMATH, MeanREAD, MeanSCIE, and MeanOverall. The next step would be to conduct EDA (Exploratory Data Analysis)."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#distribution-of-performance-in-math-reading-and-science",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#distribution-of-performance-in-math-reading-and-science",
    "title": "Take-home Exercise 1",
    "section": "4.1 Distribution of performance in math, reading and science",
    "text": "4.1 Distribution of performance in math, reading and science\n\n\nCode\nstu_melted &lt;- reshape2::melt(stu_qqq_SG_01, id.vars = \"CNTSTUID\", measure.vars = c(\"MeanMATH\", \"MeanREAD\", \"MeanSCIE\"))\n\naverage_scores &lt;- stu_melted %&gt;%\n  group_by(variable) %&gt;%\n  summarise(MeanScore = mean(value, na.rm = TRUE))\n\np1 &lt;- ggplot(stu_melted, aes(x = variable, y = value, fill = variable)) +\n  geom_boxplot(outlier.colour = \"blue\", outlier.shape = 1) +\n  geom_text(data = average_scores, aes(label = round(MeanScore, 1), y = MeanScore), \n            position = position_dodge(width = 0.75), vjust =1.8, color = \"black\", size = 3.5) +\n  stat_summary(fun.y=mean, geom=\"point\", shape=20, size=3, color=\"red\", fill=\"red\") +\n  scale_x_discrete(labels = c(\"MeanMATH\" = \"Math\", \"MeanREAD\" = \"Reading\", \"MeanSCIE\" = \"Science\")) +\n  scale_fill_brewer(palette = \"Pastel1\") +\n  labs(title = \"Distribution of subject performance value\",\n       x = \"Subject\",\n       y = \"Performance value\") +\n  theme_minimal() +\n  theme(legend.position = \"top\")\n\np2 &lt;- ggplot(stu_qqq_SG_01, aes(x = MeanOverall)) +\n  geom_point(aes(y = MeanMATH, color = \"Math\"), alpha = 0.5) +\n  geom_smooth(aes(y = MeanMATH, color = \"Math\"), method = 'lm') +\n  geom_point(aes(y = MeanREAD, color = \"Reading\"), alpha = 0.5) +\n  geom_smooth(aes(y = MeanREAD, color = \"Reading\"), method = 'lm') +\n  geom_point(aes(y = MeanSCIE, color = \"Science\"), alpha = 0.5) +\n  geom_smooth(aes(y = MeanSCIE, color = \"Science\"), method = 'lm') +\n  scale_color_manual(values = c(\"Math\" = \"salmon\", \"Reading\" = \"steelblue1\", \"Science\" = \"darkseagreen\"),\n                     name = \"Subject\", \n                     labels = c(\"Math\" = \"Math\", \"Reading\" = \"Reading\", \"Science\" = \"Science\")) +\n  theme_minimal() +\n  theme(legend.position = \"top\") +\n  labs(title = \"Relationship Between MeanOverall and Three Subjects\",\n       x = \"MeanOverall\", y = \"Score\")\n\np1+p2\n\n\n\n\n\n\nInsights：\n\nSingaporean students perform best on average in Mathematics, with Reading being the lowest.\nReading and Science seem to have more outliers, suggesting that scores in these subjects may have more extreme cases.\nHowever, overall, the average scores of the three subjects are not significantly different, indicating a relatively balanced performance across subjects among Singaporean students."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-relationship-between-gender-and-academic-performance",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-relationship-between-gender-and-academic-performance",
    "title": "Take-home Exercise 1",
    "section": "4.2 The relationship between gender and academic performance",
    "text": "4.2 The relationship between gender and academic performance\n\n\nCode\nstu_long &lt;- reshape2::melt(stu_qqq_SG_01, id.vars = c(\"CNTSTUID\", \"ST004D01T\"), \n                 measure.vars = c(\"MeanMATH\", \"MeanREAD\", \"MeanSCIE\",\"MeanOverall\"),\n                 variable.name = \"Subject\", value.name = \"Score\")\n\nstu_long$Subject &lt;- factor(stu_long$Subject, \n                           levels = c(\"MeanMATH\", \"MeanREAD\", \"MeanSCIE\",\"MeanOverall\"),\n                           labels = c(\"Math\", \"Reading\", \"Science\",\"Overall\"))\n\n# Calculate the average score for each subject and gender combination\naverage_scores &lt;- stu_long %&gt;%\n  group_by(Subject, ST004D01T) %&gt;%\n  summarise(AverageScore = mean(Score, na.rm = TRUE)) %&gt;%\n  ungroup()\n\n# Plot box plots and add numerical values of average scores, using facet_wrap to arrange into a two-row and two-column layout\nggplot(stu_long, aes(x = as.factor(ST004D01T), y = Score, fill = as.factor(ST004D01T))) +\n  geom_boxplot(outlier.colour = \"red\", outlier.shape = 1) +\n  geom_text(data = average_scores, aes(label = sprintf(\"%.1f\", AverageScore), \n                                       y = AverageScore), \n            position = position_dodge(width = 0.75), \n            size = 2.5, \n            color = \"black\",\n            vjust = 1.5) +\n  facet_wrap(~ Subject, ncol = 2) + \n  labs(x = \"Gender\", y = \"Average Score\", \n       title = \"The Relationship Between Gender and Academic Performance\") +\n  scale_fill_discrete(name = \"Gender\", labels = c(\"1\" = \"Female\", \"2\" = \"Male\")) +\n  theme_minimal() +\n  theme(legend.position = \"top\")\n\n\n\n\n\n\nInsights:\n\nIn Mathematics and Science, boys have higher average scores than girls. In Reading, girls have higher average scores than boys.\nAcross all three subjects, the distribution of boys’ scores is more concentrated, suggesting they might have more consistency in their performance. In contrast, the distribution of girls’ scores in Mathematics and Science is more dispersed, indicating a wider range of variability in their scores.\nAlthough the overall academic performance across subjects is balanced between boys and girls, girls are slightly ahead. Girls’ performance across subjects appears to be more stable."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-relationship-between-school-and-academic-performance",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-relationship-between-school-and-academic-performance",
    "title": "Take-home Exercise 1",
    "section": "4.3 The relationship between school and academic performance",
    "text": "4.3 The relationship between school and academic performance\n\n\nCode\nnumber_of_schools &lt;- stu_qqq_SG_01 %&gt;%\n  summarise(NumberOfSchools = n_distinct(CNTSCHID))\n\nnumber_of_schools\n\n\n# A tibble: 1 × 1\n  NumberOfSchools\n            &lt;int&gt;\n1             164\n\n\nThere are a total of 164 schools.\n\n\nCode\nlong_data &lt;- stu_qqq_SG_01 %&gt;%\n  gather(key = \"Subject\", value = \"Score\", MeanMATH, MeanREAD, MeanSCIE, MeanOverall) %&gt;%\n  group_by(CNTSCHID, Subject) %&gt;%\n  summarise(AverageScore = mean(Score, na.rm = TRUE)) %&gt;%\n  ungroup() %&gt;%\n  mutate(Label = ifelse(AverageScore &gt; 650 | AverageScore &lt; 450, as.character(CNTSCHID), \"\"))\n\n# Create a dot plot to compare the average performance of different schools\nggplot(long_data, aes(x = CNTSCHID, y = AverageScore, color = Subject)) +\n  geom_point(position = position_dodge(width = 0.5)) +\n  geom_text(aes(label = Label), check_overlap = TRUE, vjust = -1, position = position_dodge(width = 0.5)) +\n  theme_minimal() +\n  labs(title = \"Comparison of School Performance in Subjects\",\n       x = \"School ID\", y = \"Average Score\") +\n  scale_color_brewer(palette = \"Set1\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) \n\n\n\n\n\nFrom the graph, it is evident that the performance levels of most schools in Singapore are concentrated between 450 and 650, with only a few falling outside this range. I have marked the school IDs that fall outside this range. It can be seen that the school with IDs ending in 01、40、82、101、199、155shows excellent performance in all three subjects, while schools with IDs ending in 115 and 149 exhibit relatively poor performance in all three subjects.\n\n\nCode\nschool_performance &lt;- stu_qqq_SG_01 %&gt;%\n  group_by(CNTSCHID) %&gt;%\n  summarise(\n    AvgMath = mean(MeanMATH, na.rm = TRUE),\n    AvgReading = mean(MeanREAD, na.rm = TRUE),\n    AvgScience = mean(MeanSCIE, na.rm = TRUE),\n    AvgOverall= mean(MeanOverall, na.rm = TRUE)\n  ) %&gt;%\n  gather(key = \"Subject\", value = \"AverageScore\", AvgMath, AvgReading, AvgScience,AvgOverall)\n\n# Use box plots to visualize the average scores of different schools\nggplot(school_performance, aes(x = CNTSCHID, y = AverageScore, fill = Subject)) +\n  geom_boxplot() +\n  facet_wrap(~ Subject, scales = \"fixed\") +\n  theme_minimal() +\n  labs(x = \"School ID\", y = \"Average Score\", title = \"School Influence on Academic Performance\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) \n\n\n\n\n\nFrom the box plots, it is observable that the average academic performance of most schools in Singapore lies between 500 and 600. The majority of schools perform better in Mathematics and Science, with slightly lower performance in Reading, yet still within a reasonable range. The mean values also fall within a sensible range, with very few outliers.\n\n\nCode\n# Calculate the quartiles and outlier thresholds for each course in every school\nschool_quartiles &lt;- school_performance %&gt;%\n  group_by(CNTSCHID, Subject) %&gt;%\n  summarise(\n    Q1 = quantile(AverageScore, 0.25, na.rm = TRUE),\n    Q3 = quantile(AverageScore, 0.75, na.rm = TRUE),\n    IQR = Q3 - Q1,\n    LowerBound = Q1 - 1.5 * IQR\n  ) %&gt;%\n  ungroup()\n\n# Use inner_join to find outliers in the original data\noutliers &lt;- inner_join(school_performance, school_quartiles, by = c(\"CNTSCHID\", \"Subject\")) %&gt;%\n  filter(AverageScore &lt; LowerBound) %&gt;%\n  arrange(CNTSCHID, Subject)\n\n# Identify school IDs that overlap in the lower outliers for Mathematics, Reading, Science, and Overall Average Scores\noverlapping_schools &lt;- outliers %&gt;%\n  group_by(CNTSCHID) %&gt;%\n  filter(n() &gt; 1) %&gt;%\n  arrange(CNTSCHID) %&gt;%\n  ungroup()\n\n# Examine the overlapping outliers\noverlapping_schools\n\n\n# A tibble: 0 × 7\n# ℹ 7 variables: CNTSCHID &lt;dbl&gt;, Subject &lt;chr&gt;, AverageScore &lt;dbl&gt;, Q1 &lt;dbl&gt;,\n#   Q3 &lt;dbl&gt;, IQR &lt;dbl&gt;, LowerBound &lt;dbl&gt;\n\n\nThe results show that there is no single school with outliers in the same subjects, proving that the outliers originate from different schools.\n\nInsights:\n\nThe overall level of schools in Singapore tends to be balanced, with no significant differences and no “extreme schools” appearing in the high or low outliers for each subject.\nHowever, there is still some differentiation in subject performance levels among schools, as some schools, despite not appearing in the outliers, exhibit overall higher or lower levels in certain subjects.\nAdditionally, the number of schools excelling in subject performance is greater than those performing below the average level.\nMost schools fall within a reasonable range of performance, with both strengths and weaknesses coexisting."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-relationship-between-socioeconomic-status-and-academic-performance",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-relationship-between-socioeconomic-status-and-academic-performance",
    "title": "Take-home Exercise 1",
    "section": "4.4 The relationship between socioeconomic status and academic performance",
    "text": "4.4 The relationship between socioeconomic status and academic performance\nSince the three subjects and the overall average scores show a positive correlation, I have chosen to analyze the relationship between socioeconomic status and academic performance using MeanOverall and MeanSCIE.\n\nScatter plotCorrelation test\n\n\n\n\nCode\nggplot(stu_qqq_SG_01, aes(x = ESCS)) +\n  geom_point(aes(y = MeanOverall, color = \"Overall\"), alpha = 0.5) +\n  geom_smooth(aes(y = MeanOverall, color = \"Overall\"), method = 'lm') +\n  geom_point(aes(y = MeanSCIE, color = \"Science\"), alpha = 0.5) +\n  geom_smooth(aes(y = MeanSCIE, color = \"Science\"), method = 'lm') +\n  scale_color_manual(values = c(\"Overall\" = \"lightseagreen\", \"Science\" = \"palevioletred1\"),\n                     name = \"Subject\", \n                     labels = c(\"Overall\" = \"Mean Overall\", \"Science\" = \"Mean Science\")) +\n  theme_minimal() +\n  labs(title = \"Relationship Between ESCS and Academic Performance\",\n       x = \"ESCS Index\", y = \"Score\")\n\n\n\n\n\n\n\nTo determine if there is an association between the two groups, conduct a correlation analysis test.\n\n\nCode\ncor_overall_escs &lt;- cor(stu_qqq_SG_01$MeanOverall, stu_qqq_SG_01$ESCS, use = \"complete.obs\")\ncor_science_escs &lt;- cor(stu_qqq_SG_01$MeanSCIE, stu_qqq_SG_01$ESCS, use = \"complete.obs\")\n\nlm_overall &lt;- lm(MeanOverall ~ ESCS, data = stu_qqq_SG_01)\nlm_science &lt;- lm(MeanSCIE ~ ESCS, data = stu_qqq_SG_01)\n\nlm_overall\n\n\n\nCall:\nlm(formula = MeanOverall ~ ESCS, data = stu_qqq_SG_01)\n\nCoefficients:\n(Intercept)         ESCS  \n     544.90        51.28  \n\n\nCode\nlm_science\n\n\n\nCall:\nlm(formula = MeanSCIE ~ ESCS, data = stu_qqq_SG_01)\n\nCoefficients:\n(Intercept)         ESCS  \n     547.01        50.03  \n\n\nThere is a significant positive correlation between ESCS and students’ overall average scores and science scores, indicating that a higher economic, social, and cultural status is associated with better academic performance. Students who perform poorly due to unfavorable socioeconomic conditions may require some socioeconomic assistance.\n\n\n\n\nInsights: - Due to the positive correlation observed among the subjects, the scatter plot and correlation analysis indicate that there is a certain relationship between academic performance and socioeconomic status. Students from lower socioeconomic backgrounds tend to have poorer academic performance, while those from better socioeconomic circumstances tend to perform better academically.\n\nBased on these findings, recommendations can be made to Singaporean government departments and educational institutions. It is suggested to provide support and assistance to students from lower socioeconomic backgrounds to explore the possibility of improving overall academic performance. It is also possible that students from higher socioeconomic backgrounds have the opportunity to attend schools with stronger teaching capabilities."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications.In this website,you will find my coursework prepared for this course."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to chheck if tidyverse packages are installed in the computer.If they are, then they will be launched into R.\n\npacman::p_load(tidyverse,patchwork)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to chheck if tidyverse packages are installed in the computer.If they are, then they will be launched into R.\n\npacman::p_load(tidyverse,patchwork)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#r-graphics-vs-ggplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#r-graphics-vs-ggplot",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "R Graphics VS ggplot",
    "text": "R Graphics VS ggplot\n\nR Graphicsggplot2\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#grammar-of-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#grammar-of-graphics",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "Grammar of Graphics",
    "text": "Grammar of Graphics\nFigure below shows the seven grammars of ggplot2.\n\nA short description of each building block are as follows:\n\nData: The dataset being plotted.\nAesthetics take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: The visual elements used for our data, such as point, bar or line.\nFacets split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics, statiscal transformations that summarise data (e.g. mean, confidence intervals).\nCoordinate systems define the plane on which data are mapped on the graphic.\nThemes modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_bar",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_bar",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "Geometric Objects: geom_bar",
    "text": "Geometric Objects: geom_bar\n\nggplot(data=exam_data, \n       aes(x= MATHS))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_dotplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_dotplot",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "Geometric Objects: geom_dotplot",
    "text": "Geometric Objects: geom_dotplot\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\n\n\n\nThe code chunk below performs the following two steps: - scale_y_continuous() is used to turn off the y-axis, and - binwidth argument is used to change the binwidth to 2.5.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_histogram",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "Geometric Objects: geom_histogram()",
    "text": "Geometric Objects: geom_histogram()\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n\n\n\nNote that the default bin is 30."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "Modifying a geometric object by changing geom()",
    "text": "Modifying a geometric object by changing geom()\nIn the code chunk below,\n\nbins argument is used to change the number of bins to 20\nfill argument is used to shade the histogram with color\ncolor argument is used to change the outline colour of the bars\ngeom_vline is used to add mean and median lines\nannotate is used to include descriptions for each line\n\n\nggplot(data=exam_data,\n       aes(x=MATHS)) + \n    geom_histogram(bins=20, \n                   color=\"grey30\", \n                   fill=\"#E1C8C4\") +\n    labs(x = \"Math Score\",\n         y = \"No. of Pupils\",\n         title = \"Distribution of Math Scores\") + \n    geom_vline(aes(xintercept=median(exam_data$MATHS, na.rm=T)),\n               color=\"#595DE5\", linewidth=1, linetype=\"dashed\") + \n    # Add line annotations\n    annotate(\n      \"text\", \n      x = 82, \n      y = 50,\n      label = paste(\"Median =\", round(median(exam_data$MATHS, na.rm=T), 3)),\n      color = \"#595DE5\",\n      size = 3.5\n    ) +\n    geom_vline(aes(xintercept=mean(exam_data$MATHS, na.rm=T)),\n               colour=\"red\", linewidth=1, linetype=\"dashed\") + \n      # Add line annotations\n    annotate(\n      \"text\", \n      x = 60, \n      y = 42,\n      label = paste(\"Mean =\", round(mean(exam_data$MATHS, na.rm=T), 3)),\n      color = \"red\",\n      size = 3.5\n    ) +\n    theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))      \n\n\n\n\n\nChanged no. of binsUsing binwidthBin alignment using boundary & center\n\n\n\n# Original\nb_p1 &lt;- ggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 #binwidth=5, \n                 color= 'white',\n                 fill='grey') +\n  theme_gray() +\n  theme(panel.background=element_rect(fill='grey96')) +\n  labs(x = \"Math Score\",\n       y = \"No. of Pupils\",\n       title = \"20 bins\") +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n# Changed\nb_p2 &lt;- ggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(bins=30, \n                 boundary = 100,\n                 #binwidth=5, \n                 color= 'white',\n                 fill='grey') +\n  theme_gray() +\n  theme(panel.background=element_rect(fill='grey96')) +\n  labs(x = \"Math Score\",\n       y = \"No. of Pupils\",\n       title = \"30 bins\") +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n# format plot layout\nb_p1 + b_p2\n\n\n\n\n\n\n\n# Original\nbw_p1 &lt;- ggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 #binwidth=5, \n                 color= 'white',\n                 fill='grey') +\n  theme_gray() +\n  theme(panel.background=element_rect(fill='grey96')) +\n  labs(x = \"Math Score\",\n       y = \"No. of Pupils\",\n       title = \"20 bins\") +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))  \n\n# Changed\nbw_p2 &lt;- ggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(#bins=20, \n                 boundary = 100,\n                 binwidth=5, \n                 color= 'white',\n                 fill='grey') +\n  theme_gray() +\n  theme(panel.background=element_rect(fill='grey96')) +\n  labs(x = \"Math Score\",\n       y = \"No. of Pupils\",\n       title = \"Binwidth 5 = 19 bins\") +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n# format plot layout\nbw_p1 + bw_p2\n\n\n\n\n\n\n\n# Original\nbb_p1 &lt;- ggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 #binwidth=5, \n                 color= 'white',\n                 fill='grey') +\n  theme_gray() +\n  theme(panel.background=element_rect(fill='grey96')) +\n  labs(x = \"Math Score\",\n       y = \"No. of Pupils\",\n       title = \"Bin alignment using boundary\") +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n  \n# Changed\nbb_p2 &lt;- ggplot(data=exam_data, \n       aes(x=MATHS)) +\n  geom_histogram(bins=20, \n                 center = 50,\n                 #binwidth=5, \n                 color= 'white',\n                 fill='grey') +\n  theme_gray() +\n  theme(panel.background=element_rect(fill='grey96')) +\n  labs(x = \"Math Score\",\n       y = \"No. of Pupils\",\n       title = \"Bin alignment using center\") +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n# format plot layout\nbb_p1 + bb_p2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "Modifying a geometric object by changing aes()",
    "text": "Modifying a geometric object by changing aes()\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom-density",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom-density",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "Geometric Objects: geom-density()",
    "text": "Geometric Objects: geom-density()\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "Geometric Objects: geom_boxplot()",
    "text": "Geometric Objects: geom_boxplot()\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\n\nThe code chunk below plots the distribution of Maths scores by gender in notched plot instead of boxplot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "Geometric Objects: geom_violin",
    "text": "Geometric Objects: geom_violin\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "Geometric Objects: geom_point()",
    "text": "Geometric Objects: geom_point()\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom-objects-can-be-combined",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom-objects-can-be-combined",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "geom objects can be combined",
    "text": "geom objects can be combined\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "Working with stat()",
    "text": "Working with stat()\nThe boxplots below are incomplete because the positions of the means were not shown.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "Working with stat - the stat_summary() method",
    "text": "Working with stat - the stat_summary() method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               linewidth=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "Working with stat - the geom() method",
    "text": "Working with stat - the geom() method\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             linewidth=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot---geom_smooth",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot---geom_smooth",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "Adding a best fit curve on a scatterplot - geom_smooth()",
    "text": "Adding a best fit curve on a scatterplot - geom_smooth()\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)                               \n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "Working with facet_wrap()",
    "text": "Working with facet_wrap()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "facet_grid() function",
    "text": "facet_grid() function\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "Working with Coordinate",
    "text": "Working with Coordinate\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()          \n\n\n\n\ncoord_flip()\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "Changing the y- and x-axis range",
    "text": "Changing the y- and x-axis range\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, linewidth=0.5)  \n\n\n\n\nThe code below fixed both the y-axis and x-axis range from 0-100.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "title": "Hands-on Exercise 1：Introduction to Visual Analytics",
    "section": "Working with theme",
    "text": "Working with theme\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2：Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes,tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\nsummary(exam_data)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00  \n\n\n\n\n\n\n\n\nA comparison between annotations using geom_label(), geom_text() and package ggrepel.\n\nWithoutWith ggrepel\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5) +  \n  geom_label_repel(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\n\n\n\n\nggplot2 comes with eight built-in themes, they are: theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void().\n\nWithoutWith ggtheme\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\nggtitle(\"Distribution of Maths scores\") +\ntheme_economist()\n\n\n\n\n\n\n\n\n\n\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nWithout hrbthems plotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\naxis_title_size argument is used to increase the font size of the axis title to 18.\nbase_size argument is used to increase the default axis label to 15.\ngrid argument is used to remove the x-axis grid lines.\n\n\nWith hrbthems plotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\n\n\n\n\n\np1 plotp1 code\n\n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\np2 plotp2 code\n\n\n\n\n\n\n\n\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\n\n\n\np3 plotp3 code\n\n\n\n\n\n\n\n\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\nPatchwork package：\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\np1 + p2\n\n\n\n\n\n\n\n\n“|” operator to stack two ggplot2 graphs,\n“/” operator to place the plots beside each other,\n“()” operator the define the sequence of the plotting.\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\n\n\n\npatchwork also provides auto-tagging capabilities.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\n\ninset_element()\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\n\n\nFigure below is created by combining patchwork and theme_economist() of ggthemes package.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on Exercise 2：Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes,tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "title": "Hands-on Exercise 2：Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#overview-of-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#overview-of-the-data",
    "title": "Hands-on Exercise 2：Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "summary(exam_data)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-annotation-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-annotation-ggrepel",
    "title": "Hands-on Exercise 2：Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "A comparison between annotations using geom_label(), geom_text() and package ggrepel.\n\nWithoutWith ggrepel\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5) +  \n  geom_label_repel(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-themes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-ggplot2-themes",
    "title": "Hands-on Exercise 2：Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "ggplot2 comes with eight built-in themes, they are: theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void().\n\nWithoutWith ggtheme\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\nggtitle(\"Distribution of Maths scores\") +\ntheme_economist()\n\n\n\n\n\n\n\n\n\n\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nWithout hrbthems plotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\naxis_title_size argument is used to increase the font size of the axis title to 18.\nbase_size argument is used to increase the default axis label to 15.\ngrid argument is used to remove the x-axis grid lines.\n\n\nWith hrbthems plotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#beyond-single-graph",
    "title": "Hands-on Exercise 2：Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "p1 plotp1 code\n\n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\np2 plotp2 code\n\n\n\n\n\n\n\n\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\n\n\n\np3 plotp3 code\n\n\n\n\n\n\n\n\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\nPatchwork package：\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\np1 + p2\n\n\n\n\n\n\n\n\n“|” operator to stack two ggplot2 graphs,\n“/” operator to place the plots beside each other,\n“()” operator the define the sequence of the plotting.\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\n\n\n\npatchwork also provides auto-tagging capabilities.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\n\ninset_element()\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\n\n\nFigure below is created by combining patchwork and theme_economist() of ggthemes package.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03a/Hands-on_Ex03a.html",
    "href": "Hands-on_Ex/Hands-on_Ex03a/Hands-on_Ex03a.html",
    "title": "Hands-on Exercise 3a：Programming Interactive Data Visualisation with R",
    "section": "",
    "text": "First, write a code chunk to check, install and launch the following R packages:\n\nggiraph for making ‘ggplot’ graphics interactive.\nplotly, R library for plotting interactive statistical graphs.\nDT provides an R interface to the JavaScript library DataTables that create interactive table on html page.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\npatchwork for combining multiple ggplot2 graphs into one figure.\n\nThe code chunk below will be used to accomplish the task.\n\npacman::p_load(ggiraph, plotly, patchwork, DT, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03a/Hands-on_Ex03a.html#interactive-data-visualisation---ggiraph-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03a/Hands-on_Ex03a.html#interactive-data-visualisation---ggiraph-methods",
    "title": "Hands-on Exercise 3a：Programming Interactive Data Visualisation with R",
    "section": "Interactive Data Visualisation - ggiraph methods",
    "text": "Interactive Data Visualisation - ggiraph methods\nggiraph  is an htmlwidget and a ggplot2 extension. It allows ggplot graphics to be interactive.\nInteractive is made with ggplot geometries that can understand three arguments:\n\nTooltip: a column of data-sets that contain tooltips to be displayed when the mouse is over elements.\nOnclick: a column of data-sets that contain a JavaScript function to be executed when elements are clicked.\nData_id: a column of data-sets that contain an id to be associated with elements.\n\nIf it used within a shiny application, elements associated with an id (data_id) can be selected and manipulated on client and server sides. Refer to this article for more detail explanation.\n\nTooltip effect with tooltip aesthetic\nBelow shows a typical code chunk to plot an interactive statistical graph by using ggiraph package. Notice that the code chunk consists of two parts. First, an ggplot object will be created. Next, girafe() of ggiraph will be used to create an interactive svg object.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\nNotice that two steps are involved. First, an interactive version of ggplot2 geom (i.e. geom_dotplot_interactive()) will be used to create the basic graph. Then, girafe() will be used to generate an svg object to be displayed on an html page."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03a/Hands-on_Ex03a.html#interactivity",
    "href": "Hands-on_Ex/Hands-on_Ex03a/Hands-on_Ex03a.html#interactivity",
    "title": "Hands-on Exercise 3a：Programming Interactive Data Visualisation with R",
    "section": "Interactivity",
    "text": "Interactivity\nBy hovering the mouse pointer on an data point of interest, the student’s ID will be displayed.\n\n\n\n\n\n\n\nDisplaying multiple information on tooltip\nThe content of the tooltip can be customised by including a list object as shown in the code chunk below.\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\nThe first three lines of codes in the code chunk create a new field called tooltip. At the same time, it populates text in ID and CLASS fields into the newly created field. Next, this newly created field is used as tooltip field as shown in the code of line 7."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03a/Hands-on_Ex03a.html#interactivity-1",
    "href": "Hands-on_Ex/Hands-on_Ex03a/Hands-on_Ex03a.html#interactivity-1",
    "title": "Hands-on Exercise 3a：Programming Interactive Data Visualisation with R",
    "section": "Interactivity",
    "text": "Interactivity\nBy hovering the mouse pointer on an data point of interest, the student’s ID and Class will be displayed.\n\n\n\n\n\n\n\n3.6.1 Customising Tooltip style\nCode chunk below uses opts_tooltip() of ggiraph to customize tooltip rendering by add css declarations.\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)    \n\n\n\n\n\nNotice that the background colour of the tooltip is black and the font colour is white and bold.\n\nRefer to Customizing girafe objects to learn more about how to customise ggiraph objects.\n\n\n\nDisplaying statistics on tooltip\nCode chunk below shows an advanced way to customise tooltip. In this example, a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, linewidth = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\nHover effect with data_id aesthetic\nCode chunk below shows the second interactive feature of ggiraph, namely data_id.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\nNote that the default value of the hover css is hover_css = “fill:orange;”.\n\n\nStyling hover effect\nIn the code chunk below, css codes are used to change the highlighting effect.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\nNote: Different from previous example, in this example the ccs customisation request are encoded directly.\n\n\nCombining tooltip and hover effect\nThere are time that we want to combine tooltip and hover effect on the interactive statistical graph as shown in the code chunk below.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\nCombining tooltip and hover effect\nThere are time that we want to combine tooltip and hover effect on the interactive statistical graph as shown in the code chunk below.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\nClick effect with onclick\nonclick argument of ggiraph provides hotlink interactivity on the web.\nThe code chunk below shown an example of onclick.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\nInteractivity: Web document link with a data object will be displayed on the web browser upon mouse click.\n\n\nCoordinated Multiple Views with ggiraph\nCoordinated multiple views methods has been implemented in the data visualisation below.\nNotice that when a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too.\nIn order to build a coordinated multiple views as shown in the example above, the following programming strategy will be used:\n\nAppropriate interactive functions of ggiraph will be used to create the multiple views.\npatchwork function of patchwork package will be used inside girafe function to create the interactive coordinated multiple views.\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\nThe data_id aesthetic is critical to link observations between plots and the tooltip aesthetic is optional but nice to have when mouse over a point."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03a/Hands-on_Ex03a.html#interactive-data-visualisation---plotly-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03a/Hands-on_Ex03a.html#interactive-data-visualisation---plotly-methods",
    "title": "Hands-on Exercise 3a：Programming Interactive Data Visualisation with R",
    "section": "Interactive Data Visualisation - plotly methods!",
    "text": "Interactive Data Visualisation - plotly methods!\nPlotly’s R graphing library create interactive web graphics from ggplot2 graphs and/or a custom interface to the (MIT-licensed) JavaScript library plotly.js inspired by the grammar of graphics. Different from other plotly platform, plot.R is free and open source.\n\nThere are two ways to create interactive graph by using plotly, they are:\n\nby using plot_ly(), and\nby using ggplotly()\n\n\nCreating an interactive scatter plot: plot_ly() method\nThe tabset below shows an example a basic interactive plot created by using plot_ly().\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\nWorking with visual variable: plot_ly() method\nIn the code chunk below, color argument is mapped to a qualitative visual variable (i.e. RACE).\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\nInteractive:\nClick on the colour symbol at the legend.\n\n\n\n\n\nCreating an interactive scatter plot: ggplotly() method\nThe code chunk below plots an interactive scatter plot by using ggplotly().\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\nNotice that the only extra line you need to include in the code chunk is ggplotly().\n\n\n\n\n\nCoordinated Multiple Views with plotly\nThe creation of a coordinated linked plot by using plotly involves three steps:\n\nhighlight_key() of plotly package is used as shared data.\ntwo scatterplots will be created by using ggplot2 functions.\nlastly, subplot() of plotly package is used to place them next to each other side-by-side.\n\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\nThing to learn from the code chunk:\nhighlight_key() simply creates an object of class crosstalk::SharedData. Visit this link to learn more about crosstalk,"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03a/Hands-on_Ex03a.html#interactive-data-visualisation---crosstalk-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03a/Hands-on_Ex03a.html#interactive-data-visualisation---crosstalk-methods",
    "title": "Hands-on Exercise 3a：Programming Interactive Data Visualisation with R",
    "section": "Interactive Data Visualisation - crosstalk methods!",
    "text": "Interactive Data Visualisation - crosstalk methods!\nCrosstalk is an add-on to the htmlwidgets package. It extends htmlwidgets with a set of classes, functions, and conventions for implementing cross-widget interactions (currently, linked brushing and filtering).\n\nInteractive Data Table: DT package\n\nA wrapper of the JavaScript Library DataTables\nData objects in R can be rendered as HTML tables using the JavaScript library ‘DataTables’ (typically via R Markdown or Shiny).\n\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\nLinked brushing: crosstalk method\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)   \n\nThings to learn from the code chunk:\nhighlight() is a function of plotly package. It sets a variety of options for brushing (i.e., highlighting) multiple plots. These options are primarily designed for linking multiple plotly graphs, and may not behave as expected when linking plotly to another htmlwidget package via crosstalk. In some cases, other htmlwidgets will respect these options, such as persistent selection in leaflet.\nbscols() is a helper function of crosstalk package. It makes it easy to put HTML elements side by side. It can be called directly from the console but is especially designed to work in an R Markdown document. Warning: This will bring in all of Bootstrap!."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03a/Hands-on_Ex03a.html#reference",
    "href": "Hands-on_Ex/Hands-on_Ex03a/Hands-on_Ex03a.html#reference",
    "title": "Hands-on Exercise 3a：Programming Interactive Data Visualisation with R",
    "section": "Reference",
    "text": "Reference\n\nggiraph\nThis link provides online version of the reference guide and several useful articles. Use this link to download the pdf version of the reference guide.\n\nHow to Plot With Ggiraph\nInteractive map of France with ggiraph\nCustom interactive sunbursts with ggplot in R\nThis link provides code example on how ggiraph is used to interactive graphs for Swiss Olympians - the solo specialists.\n\n\n\nplotly for R\n\nGetting Started with Plotly in R\nA collection of plotly R graphs are available via this link.\nCarson Sievert (2020) Interactive web-based data visualization with R, plotly, and shiny, Chapman and Hall/CRC is the best resource to learn plotly for R. The online version is available via this link\nPlotly R Figure Reference provides a comprehensive discussion of each visual representations.\nPlotly R Library Fundamentals is a good place to learn the fundamental features of Plotly’s R API.\nGetting Started\nBuilding an animation step-by-step with gganimate.\nCreating a composite gif with multiple gganimate panels"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03b/Hands-on_Ex03b.html",
    "href": "Hands-on_Ex/Hands-on_Ex03b/Hands-on_Ex03b.html",
    "title": "Hands-on Exercise 3b：Programming Animated Statistical Graphics with R",
    "section": "",
    "text": "When creating animations, the plot does not actually move. Instead, many individual plots are built and then stitched together as movie frames, just like an old-school flip book or cartoon. Each frame is a different plot when conveying motion, which is built using some relevant subset of the aggregate data. The subset drives the flow of the animation when stitched back together."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03b/Hands-on_Ex03b.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex03b/Hands-on_Ex03b.html#getting-started",
    "title": "Hands-on Exercise 3b：Programming Animated Statistical Graphics with R",
    "section": "Getting Started",
    "text": "Getting Started\n\nLoading the R packages\nFirst, write a code chunk to check, install and load the following R packages:\n\nplotly, R library for plotting interactive statistical graphs.\ngganimate, an ggplot extension for creating animated statistical graphs.\ngifski converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\n\nImporting the data\nIn this hands-on exercise, the Data worksheet from GlobalPopulation Excel workbook will be used.\nWrite a code chunk to import Data worksheet from GlobalPopulation Excel workbook by using appropriate R package from tidyverse family\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"/Users/zhangshujie/Desktop/SMU/Term 2/Visual/suzyzsj/ISSS608-VAA/Hands-on_Ex/Hands-on_Ex03b/data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_at(col, as.factor) %&gt;%\n  mutate(Year = as.integer(Year))\n\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"/Users/zhangshujie/Desktop/SMU/Term 2/Visual/suzyzsj/ISSS608-VAA/Hands-on_Ex/Hands-on_Ex03b/data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))\n\n\n\nread_xls() of readxl package is used to import the Excel worksheet.\nmutate_at()across() are used to convert all character data type into factor.\nmutate of dplyr package is used to convert data values of Year field into integer."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03b/Hands-on_Ex03b.html#animated-data-visualisation-gganimate-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03b/Hands-on_Ex03b.html#animated-data-visualisation-gganimate-methods",
    "title": "Hands-on Exercise 3b：Programming Animated Statistical Graphics with R",
    "section": "Animated Data Visualisation: gganimate methods",
    "text": "Animated Data Visualisation: gganimate methods\ngganimate extends the grammar of graphics as implemented by ggplot2 to include the description of animation. It does this by providing a range of new grammar classes that can be added to the plot object in order to customise how it should change with time.\n\ntransition_*() defines how the data should be spread out and how it relates to itself across time.\nview_*() defines how the positional scales should change along the animation.\nshadow_*() defines how data from other points in time should be presented in the given point in time.\nenter_*()/exit_*() defines how new data should appear and how old data should disappear during the course of the animation.\nease_aes() defines how different aesthetics should be eased during transitions.\n\n\nBuilding a static population bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\nBuilding the animated bubble plot\nIn the code chunk below,\n\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year).\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03b/Hands-on_Ex03b.html#animated-data-visualisation-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03b/Hands-on_Ex03b.html#animated-data-visualisation-plotly",
    "title": "Hands-on Exercise 3b：Programming Animated Statistical Graphics with R",
    "section": "Animated Data Visualisation: plotly",
    "text": "Animated Data Visualisation: plotly\nIn Plotly R package, both ggplotly() and plot_ly() support key frame animations through the frame argument/aesthetic. They also support an ids argument/aesthetic to ensure smooth transitions between objects with the same id (which helps facilitate object constancy).\n\nBuilding an animated bubble plot: ggplotly() method\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\nAppropriate ggplot2 functions are used to create a static bubble plot. The output is then saved as an R object called gg.\nggplotly() is then used to convert the R graphic object into an animated svg object.\n\n\nNotice that although show.legend = FALSE argument was used, the legend still appears on the plot. To overcome this problem, theme(legend.position=‘none’) should be used as shown in the plot and code chunk below.\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)\n\nNotice that the only extra line you need to include in the code chunk is ggplotly().\n\n\n\n\n\nBuilding an animated bubble plot: plot_ly() method\nIn this sub-section, you will learn how to create an animated bubble plot by using plot_ly() method.\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03b/Hands-on_Ex03b.html#reference",
    "href": "Hands-on_Ex/Hands-on_Ex03b/Hands-on_Ex03b.html#reference",
    "title": "Hands-on Exercise 3b：Programming Animated Statistical Graphics with R",
    "section": "Reference",
    "text": "Reference\n\nGetting Started\nBuilding an animation step-by-step with gganimate.\nCreating a composite gif with multiple gganimate panels"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Learning Objectives\n\nUnderstand the basic concepts, theories and methodologies of visual analytics.\nAnalyse data using appropriate visual thinking and visual analytics techniques.\nPresent data using appropriate visual communication and graphical methods.\nDesign and implement cutting-edge visual analytics system for supporting decision making.\n\n\nDon’t worry,be happy,have a cup of coffee~\n\n\nAbout Me\nStill exploring all the possibilities of the future, but the most formidable task at the moment is learning data analysis and coding.\nAdditionally, the paw prints on this website all originate from my little dog, “Diamond.”"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 2 ：DataVis Makeover",
    "section": "",
    "text": "This take-home exercise is done based on a take-home exercise 1 submission prepared by a classmate. The peer submission will be critiqued in terms of clarity and aesthetics, and the original design will be remade using the data visualization principles and best practice learnt in Lesson 1 and 2."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#installing-r-packages",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#installing-r-packages",
    "title": "Take-home Exercise 2 ：DataVis Makeover",
    "section": "Installing R Packages",
    "text": "Installing R Packages\nThe code chunk below uses pacman::p_load() to check if packages are installed. If they are, they will be launched into R. The packages installed are\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2.\nhaven: an R package designed for reading and writing datasets from software like SAS, SPSS, and Stata, into R.\ngridExtra: an R package that extends the grid graphics system.\nggplot2: a widely used R package for creating elegant and informative graphics using the Grammar of Graphics framework.\nplotly: an R package for interactive, web-based charts and dashboards, extending ggplot2 capabilities.\nggridges: an R package extending ggplot2 for concise and effective ridge plots.\n\n\nCode\npacman::p_load(ggrepel, ggthemes, hrbrthemes, patchwork, tidyverse, haven, gridExtra, ggplot2, plotly, ggridges)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#dataset",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#dataset",
    "title": "Take-home Exercise 2 ：DataVis Makeover",
    "section": "Dataset",
    "text": "Dataset\nOne dataset (Student questionnaire data file) from PISA is provided for the task.\n\nstu_qqq_SG &lt;- read_rds(\"/Users/zhangshujie/Desktop/SMU/Term 2/Visual/suzyzsj/ISSS608-VAA/In-class_Ex/In-class_Ex01/data/stu_qqq_SG.rds\")\n\nFollowing this student’s approach, select the variables related to the project and name them.\n\nVariablesThe Code\n\n\n\n\n\nVariable Code\nVariable Name\n\n\n\n\nCNTSCHID\nSchool_ID\n\n\nCNTSTUID\nStudent_ID\n\n\nST004D01T\nGender\n\n\nPV1MATH\nMath_Score\n\n\nPV1READ\nReading_Score\n\n\nPV1SCIE\nScience_Score\n\n\nESCS\nSocioeconomic_Stat\n\n\nST251Q07JA\nArtwork\n\n\n\n\n\n\nstu_qqq_eda &lt;- stu_qqq_SG %&gt;%\n  select(CNTSCHID,CNTSTUID,ST004D01T, PV1MATH, PV1READ, PV1SCIE, ST250Q01JA, ST250Q03JA, ST251Q07JA, ESCS)%&gt;%\n  rename(c(Gender=\"ST004D01T\", \n           School_ID=\"CNTSCHID\", \n           Student_ID=\"CNTSTUID\",\n           Math_Score=\"PV1MATH\",\n           Reading_Score=\"PV1READ\",\n           Science_Score=\"PV1SCIE\",\n           Own_Room=\"ST250Q01JA\",\n           Edu_App=\"ST250Q03JA\",\n           Artwork=\"ST251Q07JA\",\n           Socioeconomic_Stat=\"ESCS\"))\n\n\n\n\nChanging Data Types\n\n\nCode\nstu_qqq_eda$School_ID = as.factor(stu_qqq_eda$School_ID)\nstu_qqq_eda$Gender = as.factor(stu_qqq_eda$Gender)\n\n\nRecode Variables\n\nGenderArtworkSocioeconomic Status\n\n\n\nstu_qqq_eda &lt;- stu_qqq_eda %&gt;%\n  mutate(Gender=(recode(Gender, '1'=\"Female\", '2'=\"Male\")))\n\n\n\n\nstu_qqq_eda$Artwork &lt;- factor(stu_qqq_eda$Artwork,\n                               levels = c(1,2,3,4),\n                               labels = c(\"None\",\"One\",\"Two\",\"Three+\"))\nstu_data_artwork &lt;- stu_qqq_eda[!is.na(stu_qqq_eda$Artwork), ]\n\n\n\n\nstu_qqq_socio &lt;- stu_qqq_eda %&gt;%\n  select(Math_Score, Science_Score, Reading_Score, Socioeconomic_Stat) %&gt;%\n  drop_na()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualization-1academic-performance",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualization-1academic-performance",
    "title": "Take-home Exercise 2 ：DataVis Makeover",
    "section": "Visualization 1:Academic Performance",
    "text": "Visualization 1:Academic Performance\n\nMathematicsReadingScience\n\n\n\n\nCode\nggplot(data=stu_qqq_eda, \n       aes(x=Math_Score)) +\n  geom_histogram(color= \"grey10\",\n           fill= '#ADD0B3') +\n  labs(x = \"Math Scores\",\n       y =\"Number of Students\",\n       title= \"Distribution of Student Math Scores\") +\n  geom_vline(aes(xintercept=median(stu_qqq_eda$Math_Score, na.rm = T)), \n             color=\"#FFFFFF\", \n             linewidth=1, \n             linetype=\"dashed\") + \n  annotate(\"text\", \n           x=675, \n           y=60, \n          label= paste(\"Median =\", round(median(stu_qqq_eda$Math_Score, na.rm = T), 3)), \n           color= \"white\", \n           size=4,\n           ) +\n  geom_vline(aes(xintercept=mean(stu_qqq_eda$Math_Score, na.rm = T)),\n             colour=\"black\",\n             linewidth=1,\n             linetype=\"dashed\") +\n  annotate(\"text\",\n           x=495,\n           y=50,\n           label=paste(\"Mean =\", round(mean(stu_qqq_eda$Math_Score, na.rm = T), 3)),\n           color=\"black\",\n           size=4) +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\nCode\nggplot(data=stu_qqq_eda, \n       aes(x=Reading_Score)) +\n  geom_histogram(color= \"grey10\",\n           fill= '#ADD0B3') +\n  labs(x= \"Reading Scores\",\n       y=\"Number of Students\",\n       title= \"Distribution of Student Reading Scores\") +\n  geom_vline(aes(xintercept=median(stu_qqq_eda$Reading_Score, na.rm = T)), \n             color=\"#FFFFFF\", \n             linewidth=1, \n             linetype=\"dashed\") + \n  annotate(\"text\", \n           x=650, \n           y=60, \n           label= paste(\"Median =\", round(median(stu_qqq_eda$Reading_Score, na.rm = T), 3)), \n           color= \"#FFFFFF\", \n           size=4) +\n  geom_vline(aes(xintercept=mean(stu_qqq_eda$Reading_Score, na.rm = T)),\n             colour=\"black\",\n             linewidth=1,\n             linetype=\"dashed\") +\n  annotate(\"text\",\n           x=460,\n           y=50,\n           label=paste(\"Mean =\", round(mean(stu_qqq_eda$Reading_Score, na.rm = T), 3)),\n           color=\"black\",\n           size=4) +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\nCode\nggplot(data=stu_qqq_eda, \n       aes(x=Science_Score)) +\n  geom_histogram(color= \"grey10\",\n           fill= '#ADD0B3') +\n  labs(x= \"Science Scores\",\n       y=\"Number of Students\",\n       title= \"Distribution of Student Science Scores\") +\n  geom_vline(aes(xintercept=median(stu_qqq_eda$Science_Score, na.rm = T)), \n             color=\"#FFFFFF\", \n             linewidth=1, \n             linetype=\"dashed\") + \n  annotate(\"text\", \n           x=659, \n           y=60, \n           label= paste(\"Median =\", round(median(stu_qqq_eda$Science_Score, na.rm = T), 3)), \n           color= \"#FFFFFF\", \n           size=4) +\n  geom_vline(aes(xintercept=mean(stu_qqq_eda$Science_Score, na.rm = T)),\n             colour=\"black\",\n             linewidth=1,\n             linetype=\"dashed\") +\n  annotate(\"text\",\n           x=480,\n           y=50,\n           label=paste(\"Mean =\", round(mean(stu_qqq_eda$Science_Score, na.rm = T), 3)),\n           color=\"black\",\n           size=4) +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\",colour=\"#f5f5f5\"))\n\n\n\n\n\n\n\n\n\nCritique\n\nLack of intuitive display of data dispersion: Histograms can show the pattern of data distribution, but they do not display the spread of data as intuitively as box plots, including quartiles and outliers.\nIndistinct median and outliers: Histograms do not highlight the median and outliers as clearly as box plots. Box plots provide a way to quickly identify median, outliers, and other important statistical information.\nUnclear data range: Histograms may not always clearly show the maximum and minimum values of data, whereas box plots explicitly mark these values.\nDifficulty in comparing multiple distributions: If there is a need to compare the distributions of two or more different datasets, a single histogram might not be as clear as a combined chart.\nLack of space efficiency: A single chart may visually occupy more space because it requires additional charts to provide the information that a box plot can offer.\nRemake\n\n\nMathematicsReadingScience\n\n\n\n\nCode\nmedian_math &lt;- round(median(stu_qqq_eda$Math_Score, na.rm = TRUE), 0)\nmean_math &lt;- round(mean(stu_qqq_eda$Math_Score, na.rm = TRUE), 0)\nmin_math &lt;- round(min(stu_qqq_eda$Math_Score, na.rm = TRUE), 0)\nmax_math &lt;- round(max(stu_qqq_eda$Math_Score, na.rm = TRUE), 0)\n\n# histogram\nhistogram &lt;- ggplot(stu_qqq_eda, aes(x=Math_Score)) +\n  geom_histogram(color=\"grey10\", fill='#ADD0B3', bins=30) +\n  geom_vline(aes(xintercept=median_math), color=\"#FFFFFF\", linewidth=1, linetype=\"dashed\") +\n  annotate(\"text\", x=675, y=600, label=paste(\"Median =\", median_math), color=\"black\", size=4) +\n  geom_vline(aes(xintercept=mean_math), colour=\"black\", linewidth=1, linetype=\"dashed\") +\n  annotate(\"text\", x=495, y=600, label=paste(\"Mean =\", mean_math), color=\"black\", size=4) +\n  labs(x = \"Math Scores\", y =\"Number of Students\", title= \"Distribution of Student Math Scores\") +\n  theme_minimal() +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\", colour=\"#f5f5f5\"))\n\n# boxplot\nboxplot &lt;- ggplot(stu_qqq_eda, aes(y=Math_Score, x=\"\")) +\n  geom_boxplot(fill='#ADD0B3') +\n  stat_summary(fun=mean, geom=\"point\", shape=23, size=2, color=\"darkred\", fill=\"red\") +\n  geom_text(x=0.5, y=min_math, label=min_math, vjust=-0.5) +\n  geom_text(x=0.5, y=max_math, label=max_math, vjust=-0.5) +\n  coord_flip() +\n  labs(title=\"Boxplot of Math Scores\", x=\"\", y=\"\") +\n  theme_minimal() +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\", colour=\"#f5f5f5\"),\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())\n\n# combined plot\ncombined_plot &lt;- boxplot + histogram + plot_layout(heights = c(1, 3))\ncombined_plot\n\n\n\n\n\n\n\n\n\nCode\nmedian_reading &lt;- round(median(stu_qqq_eda$Reading_Score, na.rm = TRUE), 0)\nmean_reading &lt;- round(mean(stu_qqq_eda$Reading_Score, na.rm = TRUE), 0)\nmin_reading &lt;- round(min(stu_qqq_eda$Reading_Score, na.rm = TRUE), 0)\nmax_reading &lt;- round(max(stu_qqq_eda$Reading_Score, na.rm = TRUE), 0)\n\nhistogram_reading &lt;- ggplot(stu_qqq_eda, aes(x=Reading_Score)) +\n  geom_histogram(color=\"grey10\", fill='#ADD0B3', bins=30) +\n  geom_vline(aes(xintercept=median_reading), color=\"#FFFFFF\", linewidth=1, linetype=\"dashed\") +\n  annotate(\"text\", x=650, y=600, label=paste(\"Median =\", median_reading), color=\"black\", size=4) +\n  geom_vline(aes(xintercept=mean_reading), colour=\"black\", linewidth=1, linetype=\"dashed\") +\n  annotate(\"text\", x=460, y=600, label=paste(\"Mean =\", mean_reading), color=\"black\", size=4) +\n  labs(x= \"Reading Scores\", y=\"Number of Students\", title= \"Distribution of Student Reading Scores\") +\n  theme_minimal() +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\", colour=\"#f5f5f5\"))\n\nboxplot_reading &lt;- ggplot(stu_qqq_eda, aes(y=Reading_Score, x=\"\")) +\n  geom_boxplot(fill='#ADD0B3') +\n  stat_summary(fun=mean, geom=\"point\", shape=23, size=2, color=\"darkred\", fill=\"red\") +\n  geom_text(x=0.5, y=min_reading, label=min_reading, vjust=-0.5) +\n  geom_text(x=0.5, y=max_reading, label=max_reading, vjust=-0.5) +\n  coord_flip() +\n  labs(title=\"Boxplot of Reading Scores\", x=\"\", y=\"\") +\n  theme_minimal() +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\", colour=\"#f5f5f5\"),\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())\n\ncombined_plot_reading &lt;- boxplot_reading + histogram_reading + plot_layout(heights = c(1, 3))\ncombined_plot_reading\n\n\n\n\n\n\n\n\n\nCode\nmedian_science &lt;- round(median(stu_qqq_eda$Science_Score, na.rm = TRUE), 0)\nmean_science &lt;- round(mean(stu_qqq_eda$Science_Score, na.rm = TRUE), 0)\nmin_science &lt;- round(min(stu_qqq_eda$Science_Score, na.rm = TRUE), 0)\nmax_science &lt;- round(max(stu_qqq_eda$Science_Score, na.rm = TRUE), 0)\n\nhistogram_science &lt;- ggplot(stu_qqq_eda, aes(x=Science_Score)) +\n  geom_histogram(color=\"grey10\", fill='#ADD0B3', bins=30) +\n  geom_vline(aes(xintercept=median_science), color=\"#FFFFFF\", linewidth=1, linetype=\"dashed\") +\n  annotate(\"text\", x=659, y=600, label=paste(\"Median =\", median_science), color=\"black\", size=4) +\n  geom_vline(aes(xintercept=mean_science), colour=\"black\", linewidth=1, linetype=\"dashed\") +\n  annotate(\"text\", x=480, y=600, label=paste(\"Mean =\", mean_science), color=\"black\", size=4) +\n  labs(x= \"Science Scores\", y=\"Number of Students\", title= \"Distribution of Student Science Scores\") +\n  theme_minimal() +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\", colour=\"#f5f5f5\"))\n\nboxplot_science &lt;- ggplot(stu_qqq_eda, aes(y=Science_Score, x=\"\")) +\n  geom_boxplot(fill='#ADD0B3') +\n  stat_summary(fun=mean, geom=\"point\", shape=23, size=2, color=\"darkred\", fill=\"red\") +\n  geom_text(x=0.5, y=min_science, label=min_science, vjust=-0.5) +\n  geom_text(x=0.5, y=max_science, label=max_science, vjust=-0.5) +\n  coord_flip() +\n  labs(title=\"Boxplot of Science Scores\", x=\"\", y=\"\") +\n  theme_minimal() +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\", colour=\"#f5f5f5\"),\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())\n\ncombined_plot_science &lt;- boxplot_science + histogram_science + plot_layout(heights = c(1, 3))\ncombined_plot_science\n\n\n\n\n\n\n\n\n\n\n🔍Improvement\n\nThe combination of histograms and box plots: By using the plot_layout() function, histograms and box plots are combined together, allowing both types of charts to be viewed within the same visualization, facilitating comparison and analysis.\nThe use of the theme_minimal() theme: This unifies the aesthetic style of the charts, making them more streamlined and modern.\nAdjustment of annotations and indicator lines: Through the use of annotate() and geom_vline(), dashed lines and text annotations representing the mean and median have been added to the histogram, making these key statistical indicators immediately clear.\nOptimization of chart layout and proportions: The relative height proportions of the histograms and box plots have been adjusted using the plot_layout() to ensure visual coherence."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualization-2student-performances-variations-within-schools",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualization-2student-performances-variations-within-schools",
    "title": "Take-home Exercise 2 ：DataVis Makeover",
    "section": "Visualization 2:Student Performances Variations Within Schools",
    "text": "Visualization 2:Student Performances Variations Within Schools\nThe below code chunk begins by grouping the data based on the unique school IDs. Then, it calculates the average scores for each subject, creating new variables. Only distinct combinations of school IDs and their corresponding average scores for each subject are included.\n\n\nCode\nstu_sch &lt;- stu_qqq_eda %&gt;%\n  group_by(School_ID) %&gt;%\n  mutate(math_avg = mean(Math_Score),\n         science_avg = mean(Science_Score),\n         reading_avg = mean(Reading_Score)) %&gt;%\n  select(School_ID, math_avg, science_avg, reading_avg) %&gt;%\n  unique() \n\n\nBelow shows the histograms of the different average scores for each subject across different schools. The histogram is customized with 30 bins, with a customized color scheme, and median labels and values. This provides a comprehensive view of how average scores vary within schools for each subject.\n\nMathematicsReadingScience\n\n\n\n\nCode\nsch_math &lt;- ggplot(data = stu_sch,\n       aes(x = math_avg)) +\n  geom_histogram(bins=30,\n                 color = \"grey50\",\n                 fill = \"#ADD0B3\") +\n  geom_vline(\n    aes(xintercept = median(math_avg)),\n    colour=\"black\", \n    linewidth = 0.8, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 700, \n    y = 25,\n    label = paste(\"Median =\", round(median(stu_sch$math_avg), 3)), \n    color = \"black\"\n  ) +\n  ylim(0, 30) +\n  xlim(300,900) +\n  labs(x = \"Average Scores\", y = \"Count\", title = \"Mathematics\")\nsch_math\n\n\n\n\n\n\n\n\n\nCode\nmedian_reading &lt;- round(median(stu_qqq_eda$Reading_Score, na.rm = TRUE), 0)\nmean_reading &lt;- round(mean(stu_qqq_eda$Reading_Score, na.rm = TRUE), 0)\nmin_reading &lt;- round(min(stu_qqq_eda$Reading_Score, na.rm = TRUE), 0)\nmax_reading &lt;- round(max(stu_qqq_eda$Reading_Score, na.rm = TRUE), 0)\n\nhistogram_reading &lt;- ggplot(stu_qqq_eda, aes(x=Reading_Score)) +\n  geom_histogram(color=\"grey10\", fill='#ADD0B3', bins=30) +\n  geom_vline(aes(xintercept=median_reading), color=\"#FFFFFF\", linewidth=1, linetype=\"dashed\") +\n  annotate(\"text\", x=650, y=600, label=paste(\"Median =\", median_reading), color=\"black\", size=4) +\n  geom_vline(aes(xintercept=mean_reading), colour=\"black\", linewidth=1, linetype=\"dashed\") +\n  annotate(\"text\", x=460, y=600, label=paste(\"Mean =\", mean_reading), color=\"black\", size=4) +\n  labs(x= \"Reading Scores\", y=\"Number of Students\", title= \"Distribution of Student Reading Scores\") +\n  theme_minimal() +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\", colour=\"#f5f5f5\"))\n\nboxplot_reading &lt;- ggplot(stu_qqq_eda, aes(y=Reading_Score, x=\"\")) +\n  geom_boxplot(fill='#ADD0B3') +\n  stat_summary(fun=mean, geom=\"point\", shape=23, size=2, color=\"darkred\", fill=\"red\") +\n  geom_text(x=0.5, y=min_reading, label=min_reading, vjust=-0.5) +\n  geom_text(x=0.5, y=max_reading, label=max_reading, vjust=-0.5) +\n  coord_flip() +\n  labs(title=\"Boxplot of Reading Scores\", x=\"\", y=\"\") +\n  theme_minimal() +\n  theme(plot.background=element_rect(fill=\"#f5f5f5\", colour=\"#f5f5f5\"),\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())\n\ncombined_plot_reading &lt;- boxplot_reading + histogram_reading + plot_layout(heights = c(1, 3))\ncombined_plot_reading\n\n\n\n\n\n\n\n\n\nCode\nsch_sci &lt;- ggplot(data = stu_sch,\n       aes(x = science_avg)) +\n  geom_histogram(bins=30,\n                 color = \"grey50\",\n                 fill = \"#ADD0B3\") +\n  geom_vline(\n    aes(xintercept = median(science_avg)),\n    colour=\"black\", \n    linewidth = 0.7, \n    linetype = \"dashed\"\n  ) +\n  annotate(\n    geom = \"text\", \n    x = 700, \n    y = 25,\n    label = paste(\"Median =\", round(median(stu_sch$science_avg), 3)), \n    color = \"black\"\n  ) +\n    ylim(0, 35) +\n    xlim(300,900) +\n  labs(x = \"Average Scores\", y = \"Count\", title = \"Science\")\nsch_sci\n\n\n\n\n\n\n\n\n\n\nCode\nsch_math &lt;- ggplot(data=stu_sch,\n       aes(y = math_avg)) +\n  geom_boxplot(width=0.1, outlier.colour = \"#137a63\") +\n  stat_summary(aes(x = 0),\n               geom = \"point\",       \n               fun.y = \"mean\",\n               shape = 18,\n               colour = \"#ADD0B3\", \n               size = 3.5) +\n  xlim(c(-.1,.1))+\n  scale_x_continuous(NULL, breaks = NULL) +\n  labs(y = \"Math Average\", title = \"\")\n\nsch_read &lt;- ggplot(data=stu_sch,\n       aes(y = reading_avg)) +\n  geom_boxplot(width=0.1, outlier.colour = \"#137a63\") +\n  stat_summary(aes(x = 0),\n               geom = \"point\",       \n               fun.y = \"mean\", \n               shape = 18,\n               colour = \"#ADD0B3\", \n               size = 3.5) +\n  xlim(c(-.1,.1))+\n  scale_x_continuous(NULL, breaks = NULL) +\n  labs(y = \"Reading Average\", title = \"\")\n\nsch_sci &lt;- ggplot(data=stu_sch,\n       aes(y = science_avg)) +\n  geom_boxplot(width=0.1, outlier.colour = \"#137a63\") +\n  stat_summary(aes(x = 0),\n               geom = \"point\",       \n               fun.y = \"mean\",  \n               shape = 18,\n               colour = \"#ADD0B3\", \n               size = 3.5) +\n  xlim(c(-.1,.1)) +\n  scale_x_continuous(NULL, breaks = NULL) +\n  labs(y = \"Science Average\", title = \"\")\n\nsch_math + sch_read + sch_sci\n\n\n\n\n\n\nCritique\n\nLack of integrated comparison, making it difficult to perform quick and direct comparisons between subjects.\nInsufficient integration of information, with independent charts leading to dispersed information, requiring the audience to shift their attention between different charts to gain a comprehensive understanding.\nUnclear identification: The box plots do not provide specific identifiers (such as School ID) like the scatter plot, which makes it less convenient to identify specific data points (such as particularly high or low school average scores).\nVisual effects: The scatter plot provides visual distinction through color coding, which helps to quickly identify the distribution of different subjects.\n\n\n\nRemake\n\n\nCode\n# Scatter plot for Avg Math Score vs School ID\np1 &lt;- ggplot(stu_sch, aes(x = School_ID, y = math_avg)) +\n  geom_point(aes(color = School_ID), alpha = 0.6) +\n  ggtitle(\"Scatter Plot of Avg Math Scores by School ID\") +\n  xlab(\"School ID\") +\n  ylab(\"Average Math Score\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\n# Scatter plot for Avg Reading Score vs School ID\np2 &lt;- ggplot(stu_sch, aes(x = School_ID, y = reading_avg)) +\n  geom_point(aes(color = School_ID), alpha = 0.6) +\n  ggtitle(\"Scatter Plot of Avg Reading Scores by School ID\") +\n  xlab(\"School ID\") +\n  ylab(\"Average Reading Score\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\n# Scatter plot for Avg Science Score vs School ID\np3 &lt;- ggplot(stu_sch, aes(x = School_ID, y = science_avg)) +\n  geom_point(aes(color = School_ID), alpha = 0.6) +\n  ggtitle(\"Scatter Plot of Avg Science Scores by School ID\") +\n  xlab(\"School ID\") +\n  ylab(\"Average Science Score\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\n# Plotting all three scatter plots in a grid for comparison\ngrid.arrange(p1, p2, p3, ncol = 1)\n\n\n\n\n\n\n\nCode\nlong_data &lt;- stu_sch %&gt;%\n  gather(key = \"Subject\", value = \"Score\", math_avg, reading_avg, science_avg) %&gt;%\n  group_by(School_ID, Subject) %&gt;%\n  summarise(AverageScore = mean(Score, na.rm = TRUE)) %&gt;%\n  ungroup() %&gt;%\n  mutate(Label = ifelse(AverageScore &gt; 650 | AverageScore &lt; 450, as.character(School_ID), \"\"))\n\n# Create a dot plot to compare the average performance of different schools\nggplot(long_data, aes(x = School_ID, y = AverageScore, color = Subject)) +\n  geom_point(position = position_dodge(width = 0.5)) +\n  geom_text(aes(label = Label), check_overlap = TRUE, vjust = -1, position = position_dodge(width = 0.5)) +\n  theme_minimal() +\n  labs(title = \"Comparison of School Performance in Subjects\",\n       x = \"School ID\", y = \"Average Score\") +\n  scale_color_brewer(palette = \"Set1\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  scale_x_discrete(breaks = NULL) \n\n\n\n\n\n\n\n🔍Improvement\n\nThe scatter plot displays the average scores of all subjects for all schools within the same view, facilitating horizontal comparison and trend identification.\nAll data points are represented within a single coordinate system, making the information more centralized and space utilization more efficient.\nThe scatter plot provides a visual distinction through color coding, aiding in the quick identification of the distribution of different subjects."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualization-3differences-in-student-performance-among-genders",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualization-3differences-in-student-performance-among-genders",
    "title": "Take-home Exercise 2 ：DataVis Makeover",
    "section": "Visualization 3:Differences in Student Performance Among Genders",
    "text": "Visualization 3:Differences in Student Performance Among Genders\nThis one explores variations in academic performance between male and female students, aiming to identify any notable differences in their scores across different subjects.\n\n\nCode\ngender_math &lt;- ggplot(data = stu_qqq_eda,\n       aes(x = Gender,\n           y = Math_Score)) +\n  geom_boxplot(color=\"grey50\",\n               fill=\"#ADD0B3\") +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"#137a63\",          \n             size=3) +\n  ylim(0,1000) +\n  labs(x = \"\", y = \"Score\", title = \"Mathematics\", axis.title.y = element_blank())\n\ngender_read &lt;- ggplot(data = stu_qqq_eda,\n       aes(x = Gender,\n           y = Reading_Score)) +\n  geom_boxplot(color=\"grey50\",\n               fill=\"#ADD0B3\") +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"#137a63\",          \n             size=3) +\n  ylim(0,1000) +\n  labs(x = \"\", title = \"Reading\") +\n  theme(axis.text.y = element_blank(), axis.title.y = element_blank())\n\ngender_sci &lt;- ggplot(data = stu_qqq_eda,\n       aes(x = Gender,\n           y = Science_Score)) +\n  geom_boxplot(color=\"grey50\",\n               fill=\"#ADD0B3\") +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"#137a63\",          \n             size=3) +\n  ylim(0,1000) +\n  labs(x = \"\", title = \"Science\") +\n  theme(axis.text.y = element_blank(), axis.title.y = element_blank())\n\ngender_math + gender_read + gender_sci\n\n\n\n\n\n\nCritique\n\nData Overlap Issue: Here, using boxplots, individual points may overlap, making it difficult to distinguish between data points. Moreover, it does not clearly differentiate between the comparisons of males and females.\nLack of Data Density Information: Boxplots do not show the density of the data, that is, the concentration of data in different regions.\nAesthetics: The presentation is not visually appealing and does not provide an intuitive sense of comparison. In this case, switching to density plots would be better.\n\n\n\nRemake\n\n\nCode\ncombined &lt;- data.frame(\n  Avg_Math = stu_qqq_eda$Math_Score, \n  Avg_Reading = stu_qqq_eda$Reading_Score, \n  Avg_Science = stu_qqq_eda$Science_Score, \n  Gender = stu_qqq_eda$Gender\n)\n# Assuming 'combined' is your data frame with the scores and gender\ncombined$Gender &lt;- factor(combined$Gender, levels = c(\"Female\", \"Male\"), labels = c(\"Female\", \"Male\"))\n\n# Density plot for Math Scores\np1 &lt;- ggplot(combined, aes(x = Avg_Math, fill = Gender)) +\n  geom_density(alpha = 0.5) +\n  ggtitle(\"Density Plot of Avg Math Scores by Gender\") +\n  xlab(\"Average Math Score\") +\n  ylab(\"Density\") +\n  theme_minimal() +\n  scale_fill_manual(values = c(\"Female\" = \"#e69f9a\", \"Male\" = \"#7bc8ed\"))\n\n# Density plot for Reading Scores\np2 &lt;- ggplot(combined, aes(x = Avg_Reading, fill = Gender)) +\n  geom_density(alpha = 0.5) +\n  ggtitle(\"Density Plot of Avg Reading Scores by Gender\") +\n  xlab(\"Average Reading Score\") +\n  ylab(\"Density\") +\n  theme_minimal() +\n  scale_fill_manual(values = c(\"Female\" = \"#e69f9a\", \"Male\" = \"#7bc8ed\"))\n\n# Density plot for Science Scores\np3 &lt;- ggplot(combined, aes(x = Avg_Science, fill = Gender)) +\n  geom_density(alpha = 0.5) +\n  ggtitle(\"Density Plot of Avg Science Scores by Gender\") +\n  xlab(\"Average Science Score\") +\n  ylab(\"Density\") +\n  theme_minimal() +\n  scale_fill_manual(values = c(\"Female\" = \"#e69f9a\", \"Male\" = \"#7bc8ed\"))\n\n# Arrange the plots into one composite image\ngrid.arrange(p1, p2, p3, ncol = 1)\n\n\n\n\n\n\n\n🔍Improvement\n\nVisual Appeal: Density plots with different colors are usually more visually appealing. Data\nDensity Representation: Density plots provide a visual representation of data density, which helps in understanding the distribution of data across different areas.\nImproved Understanding of Data Distribution: Density plots can better display the shape of data distribution, especially for skewed distributions."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualization-4socioeconomic-status",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#visualization-4socioeconomic-status",
    "title": "Take-home Exercise 2 ：DataVis Makeover",
    "section": "Visualization 4:Socioeconomic Status",
    "text": "Visualization 4:Socioeconomic Status\nThe code below shows a brief summary of the dataset for socioeconomic status.\n\nsummary(stu_qqq_eda$Socioeconomic_Stat)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n-3.5488 -0.2327  0.4817  0.2904  0.9036  3.2780      47 \n\n\nSince there are results that show NA values, this is removed during data wrangling. The below code chunk shows the summary after the deletion of unnecessary data.\n\nsummary(stu_qqq_eda$Socioeconomic_Stat)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n-3.5488 -0.2327  0.4817  0.2904  0.9036  3.2780      47 \n\n\nThe distribution of the socioeconomic standings can be seen from the histogram below.\n\n\nCode\nggplot(data = stu_qqq_socio,\n       aes(x = Socioeconomic_Stat)) +\n  geom_histogram(color = \"grey50\", fill = \"#ADD0B3\", bins = 30) +\n  geom_vline(aes(xintercept = mean(Socioeconomic_Stat)), color = \"#137a63\", linetype = \"dashed\", size = 1) +\n  labs(x = \"Social Economic Standing\", y = \"Frequency\", title = \"Distribution of Socioeconomic Status\") +\n  theme_minimal()\n\n\n\n\n\n\n\nCode\ncor1 &lt;- round(cor(stu_qqq_socio$Math_Score, stu_qqq_socio$Socioeconomic_Stat),2)\ncor2 &lt;- round(cor(stu_qqq_socio$Reading_Score, stu_qqq_socio$Socioeconomic_Stat),2)\ncor3 &lt;- round(cor(stu_qqq_socio$Science_Score, stu_qqq_socio$Socioeconomic_Stat),2)\n\np1 &lt;- ggplot(data = stu_qqq_socio,\n             aes(y = Math_Score, x = Socioeconomic_Stat)) +\n  geom_point(size = 0.1, color = \"#137a63\") +\n  geom_smooth(method = lm, color = \"black\") +\n  annotate(\"text\", x = -2, y = 800, label = paste0(\"r = \", cor1), color = 'black')\n\np2 &lt;- ggplot(data = stu_qqq_socio,\n       aes(y = Reading_Score, x = Socioeconomic_Stat)) +\n  geom_point(size = 0.1, color = \"#137a63\")+\n  geom_smooth(method = lm, color = \"black\") + \n  annotate(\"text\", x = -2, y = 800, label = paste0(\"r = \", cor2), color = 'black')\n\np3 &lt;- ggplot(data = stu_qqq_socio,\n       aes(y = Science_Score, x = Socioeconomic_Stat)) +\n  geom_point(size = 0.1, color = \"#137a63\")+\n  geom_smooth(method = lm, color = \"black\") +\n  annotate(\"text\", x = -2, y = 800, label = paste0(\"r = \", cor3), color = 'black')\n\np1/p2/p3\n\n\n\n\n\n\nCritique\n\nClarity：I think both charts are quite clear, but for the first one, “Distribution of Socioeconomic Status,” I believe it could be further improved by adding annotations for the mean and median, which would likely enhance its clarity.\nAesthetics: for the second chart, I suggest representing the three subjects with different colors to increase color diversity and to better differentiate between the subjects, as the current design might cause some confusion.\n\n\n\nRemake\n\n\nCode\nmean_value &lt;- mean(stu_qqq_socio$Socioeconomic_Stat, na.rm = TRUE)\nmedian_value &lt;- median(stu_qqq_socio$Socioeconomic_Stat, na.rm = TRUE)\n\nggplot(data = stu_qqq_socio, aes(x = Socioeconomic_Stat)) +\n  geom_histogram(color = \"grey50\", fill = \"#ADD0B3\", bins = 30) +\n  geom_vline(xintercept = mean_value, color = \"#137a63\", linetype = \"dashed\", size = 1) +\n  geom_vline(xintercept = median_value, color = \"blue\", linetype = \"dotted\", size = 1) +\n  geom_text(aes(x = mean_value, y = 800, label = paste(\"Mean:\", round(mean_value, 2))), color = \"#137a63\", vjust = -0.5, hjust = 1.5) +\n  geom_text(aes(x = median_value, y = 800, label = paste(\"Median:\", round(median_value, 2))), color = \"blue\", vjust = -0.5, hjust = -0.5) +\n  labs(x = \"Social Economic Standing\", y = \"Frequency\", title = \"Distribution of Socioeconomic Status\") +\n  theme_minimal()\n\n\n\n\n\n\n\nCode\ncor1 &lt;- round(cor(stu_qqq_socio$Math_Score, stu_qqq_socio$Socioeconomic_Stat), 2)\ncor2 &lt;- round(cor(stu_qqq_socio$Reading_Score, stu_qqq_socio$Socioeconomic_Stat), 2)\ncor3 &lt;- round(cor(stu_qqq_socio$Science_Score, stu_qqq_socio$Socioeconomic_Stat), 2)\n\ncolor_math &lt;- \"#89A0B0\"      # 淡蓝色\ncolor_reading &lt;- \"#A0B089\"   # 淡绿色\ncolor_science &lt;- \"#B089A0\"   # 淡紫色\n\np1 &lt;- ggplot(data = stu_qqq_socio, aes(y = Math_Score, x = Socioeconomic_Stat)) +\n  geom_point(size = 0.1, color = color_math) +\n  geom_smooth(method = lm, color = \"black\") +\n  annotate(\"text\", x = -2, y = 800, label = paste0(\"r = \", cor1), color = 'black') +\n  labs(title = \"Math Score vs Socioeconomic Status\")\n\np2 &lt;- ggplot(data = stu_qqq_socio, aes(y = Reading_Score, x = Socioeconomic_Stat)) +\n  geom_point(size = 0.1, color = color_reading) +\n  geom_smooth(method = lm, color = \"black\") + \n  annotate(\"text\", x = -2, y = 800, label = paste0(\"r = \", cor2), color = 'black') +\n  labs(title = \"Reading Score vs Socioeconomic Status\")\n\np3 &lt;- ggplot(data = stu_qqq_socio, aes(y = Science_Score, x = Socioeconomic_Stat)) +\n  geom_point(size = 0.1, color = color_science) +\n  geom_smooth(method = lm, color = \"black\") +\n  annotate(\"text\", x = -2, y = 800, label = paste0(\"r = \", cor3), color = 'black') +\n  labs(title = \"Science Score vs Socioeconomic Status\")\n\ngrid.arrange(p1, p2, p3, nrow = 3)\n\n\n\n\n\n\n\n🔍Improvement\n\nIn the first chart, detailed annotations have been added, including the calculation of specific mean and median values.\nIn the second chart, three different colors were used to distinguish the three subjects, making it visually more appealing and clear.\ncolor_math &lt;- “#89A0B0”\ncolor_reading &lt;- “#A0B089”\ncolor_science &lt;- “#B089A0”"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#learning-points",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#learning-points",
    "title": "Take-home Exercise 2 ：DataVis Makeover",
    "section": "Learning Points",
    "text": "Learning Points\n\nThe take-home exercise 1 done by my classmates are all excellent. Optimizing my peers’ homework has allowed me to learn a lot. On one hand, it involves learning unfamiliar syntax, and on the other hand, it enables me to further apply ggplot2, ggplot2 extensions, and tidyverse packages flexibly.\nIn terms of clarity, we need to choose just the right type of graphic that ensures the statistical charts comprehensively and clearly convey all the information of the data. Moreover, it’s crucial to use efficient graphical expression to integrate and distill the key points of the information.\nAs for aesthetics, the matching of colors and the thickness of lines can affect the beauty of the image, which has trained my aesthetic skills. And it allows me to understand the data more deeply through the matching of colors."
  }
]